@model List<net_signalr.Models.Product>

@{
    ViewData["Title"] = "Home Page";
}
<br />
<div id="tableSection">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Category</th>
                <th>Price (₺)</th>
                <th>Quantity</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in Model)
            {
                <tr>
                    <td id="ProductName@(item.ProductID)"><a href="/show/@item.ProductID/">@item.ProductName</a> <span class="s up"></span></td>
                    <td id="Category@(item.ProductID)">@item.Category</td>
                    <td id="Price@(item.ProductID)">@item.Price (₺)</td>
                    <td id="Quantity@(item.ProductID)">@item.Quantity</td>
                    <td><button type="button" class="form-control btn-primary edit-product" data-target=".bs-example-modal-lg" data-toggle="modal" data-id="@item.ProductID">Edit</button></td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="modal fade bs-example-modal-lg" id="edit-product" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        @using (Html.BeginForm("UpdateProduct", "Home", FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div id="edit-product-container" class="modal-content">
                
            </div>
        }
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        <span id="notification"></span>        
    </div>
    <div class="col-md-3">
        
    </div>
    <div class="col-md-3">
        
    </div>
    <div class="col-md-3">
        
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        function ProductData() {
            this.ProductID;
            this.ProductName;
            this.Category;
            this.Price;
            this.Quantity;
        };

        var productHub = $.connection.productHub;
        $.connection.hub.logging = true;
        $.connection.hub.start();

        productHub.client.applyChanges = function (product) {
            document.getElementById("notification").innerHTML = product.ProductID;
            document.getElementById("Price" + product.ProductID + "").innerHTML = product.Price;
        };

        $(document).ready(function () {
            $('.edit-product').click(function () {
                var url = "/Home/GetProductDetail";
                var id = $(this).attr('data-id');
                $.get(url + '/' + id, function (data) {
                    $('#edit-product').modal('show');
                    $('#edit-product-container').html(data);
                });
            });
        });

        $(document).on('click', '.btnSubmit', function () {
            var self = $(this);
            var postData = self.closest('form').serializeArray();
            productHub.server.update(arrayToObject(postData));
            $.ajax({
                url: '/Home/UpdateProduct',
                type: 'POST',
                data: self.closest('form').serialize(),
                success: function (data) {
                    if (data.success == true) {
                        $('#edit-product').modal('hide');
                        //console.log("deneme: " + data);
                        //window.alert(data);
                        //
                        //product = data;
                        //console.log("data " + product);
                        //productHub.server.hello();
                        location.reload(false);
                    } else {
                        $('#edit-product').html(data);
                    }
                }
            });
        });

        function arrayToObject(formArray) {//serialize data function
            var returnArray = {};
            for (var i = 0; i < formArray.length; i++) {
                returnArray[formArray[i]['name']] = formArray[i]['value'];
            }
            return returnArray;
        }

        //$.connection.hub.start();
    </script>
}
